<?xml version="1.0" encoding="US-ASCII"?>

<project name="wsdl2rest" default="dist" basedir=".">

    <description>
        build file for WSDL2REST
    </description>
  <!-- set global properties for this build -->
  <property name="src"      location="src"/>
  <property name="lib"      location="lib"/>
  <property name="target"   value="target/classes"/>
  <property name="dist"     value="dist"/>
  <property name="test"     location="test"/>
  <property name="samples"  location="samples"/>
  <property name="debug"    value="on"/>          <!-- this need to be off for the releases -->
  
  <property name="release-version"    value="0.1"/>


  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${target}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac destdir="${target}" debug="${debug}" debuglevel="lines,vars,source">
        <compilerarg value="-Xlint"/>
        <src path="${src}/api"/>
    	<src path="${src}/impl"/>
    	<classpath>
	    	<fileset dir="${lib}" id="allLibs">
                <exclude name="wsdl4j.jar"/>
                <include name="*.jar"/>
            </fileset>
    	</classpath>
    </javac>
  </target>
  
  <target name="test" depends="compile" description="compile test source " >
     <!-- Compile test java code from ${test} into target/test/classes -->
     <mkdir dir="target/test/classes"/>
     <javac srcdir="${test}" destdir="target/test/classes" debug="${debug}" debuglevel="lines,vars,source">
         <compilerarg value="-Xlint"/>
         <classpath>
          <pathelement location="${target}"/>
          <pathelement location="target/test/classes"/>
          <fileset refid="allLibs"/>
        </classpath>
     </javac>
			
			
      <junit printsummary="yes" haltonfailure="yes" fork="yes">
        <classpath>
          <pathelement location="${target}"/>
          <pathelement location="target/test/classes"/>
          <fileset refid="allLibs"/>
        </classpath>

        <formatter type="plain"/>
        <jvmarg value="-Dorg.slosc.wsdl2rest.wsdl.wsdlLocations=${basedir}/samples/wsdl"/>
        <jvmarg value="-Dorg.slosc.wsdl2rest.wsdl.targetLocation=${basedir}/target/generated"/>

        <!--<jvmarg value="-Xdebug"/>-->
        <!--<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5004"/>-->
       
        <batchtest fork="yes" todir="target/test">

          <fileset dir="${test}"/>
        </batchtest>
      </junit>


  </target>
  
  

  <target name="dist" depends="compile" description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-20061213.jar file -->
    <jar jarfile="${dist}/lib/wsdl2rest-${release-version}.jar" basedir="${target}"/>
  </target>

	<target name="src-dist" description="generate the src distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/src"/>

    <!-- Put everything in ${build} into the *.tar.gz file -->
    <tar destfile="${dist}/src/wsdl2rest-src-${release-version}.tar.gz" compression="gzip" basedir="." 
    excludes=".svn/**,**/.svn,**/.svn/**,dist,dist/**,target,target/**,wsdl2rest.iml,wsdl2rest.ipr,wsdl2rest.iws,config/**,docs/**,samples/**,tools/**,**/*.bak"/>
    
    <zip destfile="${dist}/src/wsdl2rest-src-${release-version}.zip" basedir="." 
    excludes=".svn/**,**/.svn,**/.svn/**,dist,dist/**,target,target/**,wsdl2rest.iml,wsdl2rest.ipr,wsdl2rest.iws,config/**,docs/**,samples/**,tools/**,**/*.bak"/>
		           
  </target>


  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="target" includeemptydirs="true"/>
    <delete dir="${dist}"/>
  </target>
  
  
</project>
